---
import Label from "../../components/Label";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import FormattedDate from "../../components/FormattedDate.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import { ConvertDate } from "../../components/ConvertDate";

const calculateRemainingDays = (Datum: string) => {
	const targetDate = ConvertDate(Datum);
	const currentDate = new Date();
	const timeDifference = targetDate.valueOf() - currentDate.valueOf();
	const daysRemaining = Math.ceil(timeDifference / (1000 * 60 * 60 * 24));
	return daysRemaining < 0 ? -1 : daysRemaining;
};

const first_half = (await getCollection("blog")).filter(
	(post) => calculateRemainingDays(post.data.Datum) > -1,
);
const second_half = (await getCollection("blog")).filter(
	(post) => calculateRemainingDays(post.data.Datum) < 0,
);

const future_posts = first_half.sort(
	(b, a) =>
		ConvertDate(b.data.Datum).valueOf() -
		ConvertDate(a.data.Datum).valueOf(),
);

const past_posts = second_half.sort(
	(a, b) =>
		ConvertDate(a.data.Datum).valueOf() -
		ConvertDate(b.data.Datum).valueOf(),
);

// Funktion zur Berechnung der verbleibenden Tage
---

<BaseLayout title={SITE_TITLE} description={SITE_DESCRIPTION}>
	<main>
		<h1>Meine Veranstaltungen</h1>
		<p class="mb-8">
			Hier finden Sie bevorstehende und vergangene Veranstaltungen von
			mir. Von privaten Gartenfesten, Mittelalterm√§rkten bis zum
			Altersheim. Schauen Sie sich gerne um und speichern sie einen Termin
			mit einem Klick in ihrem Kalender.
		</p>
		<section>
			<ul>
				{
					future_posts.map((post) => {
						return (
							<li>
								<a href={`/blog/${post.slug}/`}>
									<div class="relative hover:shadow-lg shadow-black zoom-img rounded-md overflow-hidden">
										<img
											width={720}
											height={360}
											src={post.data.Bild}
											alt=""
										/>

										{post.data.Datum && (
											<Label post={post} />
										)}
									</div>
								</a>
								<div class="flex justify-between mt-3">
									<h2>{post.data.Titel}</h2>
									<p>
										<FormattedDate
											dateStr={post.data.Datum}
											timeStr={post.data.Uhrzeit}
										/>
									</p>
								</div>
							</li>
						);
					})
				}

				{
					past_posts.map((post) => {
						return (
							<li>
								<a href={`/blog/${post.slug}/`}>
									<div class="relative hover:shadow-lg shadow-black zoom-img rounded-md overflow-hidden">
										<img
											width={720}
											height={360}
											src={post.data.Bild}
											alt=""
										/>
									</div>
								</a>
								<div class="flex justify-between mt-3">
									<h2>{post.data.Titel}</h2>
									<h3 class="shrink-0">
										<FormattedDate
											dateStr={post.data.Datum}
											timeStr={post.data.Uhrzeit}
										/>
									</h3>
								</div>
							</li>
						);
					})
				}
			</ul>
		</section>
	</main>
</BaseLayout>

<style>
	ul {
		display: flex;
		flex-wrap: wrap;
		gap: 2rem;
		list-style-type: none;
		margin: 0;
		padding: 0;
	}
	ul li {
		width: calc(50% - 1rem);
	}
	ul li * {
		text-decoration: none;
		transition: 0.2s ease;
	}
	ul li:first-child {
		width: 100%;
		text-align: center;
	}
	ul li:first-child img {
		width: 100%;
	}
	ul li img {
		border-radius: 12px;
	}
	ul li a {
		display: block;
	}

	@media (max-width: 720px) {
		ul {
			gap: 0.5em;
		}
		ul li {
			width: 100%;
			text-align: center;
		}
	}

	.zoom-img {
		width: 100%;
		object-fit: cover;
		transition: all 0.3s ease-in-out;
	}

	.zoom-img:hover {
		transform: scale(102%);
	}
</style>
